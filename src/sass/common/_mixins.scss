/*

	viewport settings

**************************************************/
@mixin for-size($range) {
  $phone-upper-boundary: 768px;
  $tablet-portrait-upper-boundary: 900px;
  $tablet-landscape-upper-boundary: 1200px;
  $desktop-upper-boundary: 1400px;
 
  @if $range == phone-only {
    @media (max-width: #{$phone-upper-boundary - 1}) { @content; }
  } @else if $range == tablet-portrait-up {
    @media (min-width: $phone-upper-boundary) { @content; }
  } @else if $range == tablet-landscape-up {
    @media (min-width: $tablet-portrait-upper-boundary) { @content; }
  } @else if $range == desktop-up {
    @media (min-width: $tablet-landscape-upper-boundary) { @content; }
  } @else if $range == big-desktop-up {
    @media (min-width: $desktop-upper-boundary) { @content; }
  }
}
/*

	font setting

**************************************************/
@mixin fts($fts, $lin: 24) {
  $rem: $fts / 10;
  $linS: $lin / $fts;
  font-size: #{$fts}px;
  font-size: #{$rem}rem;
  line-height: $linS;
}



@function vw($val1, $val2) {
    @return ($val1 / $val2) * 100vw;
}

@function vh($val1, $val2) {
    @return ($val1 / $val2) * 100vh;
}





@mixin font-jp {
  font-family: 'Noto Sans JP', sans-serif;
  font-weight: 400;
}


@mixin font-en {
  font-family: 'Montserrat', sans-serif;
  font-weight: 400;
}



/*

	clearfix settings

**************************************************/

@mixin clearfix(){
	zoom:1;
	&:after{ content:""; display:block; clear:both; }
}

/*

	boxsizing settings

**************************************************/

@mixin box-sizing($type) {
	-webkit-box-sizing:$type;
	-moz-box-sizing:$type;
	box-sizing:$type;
}

/*

	opacity settings

**************************************************/

@mixin opacity($opacity) {
	opacity: $opacity;
	filter: alpha(opacity=($opacity * 100));
}


/*

	border-radius settings

**************************************************/

@mixin border-radius ($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius:    $radius;
	border-radius:         $radius;
	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

@mixin border-radiuses ($topright,$bottomright,$bottomleft,$topleft) {
	-webkit-border-top-right-radius:    $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius:  $bottomleft;
	-webkit-border-top-left-radius:     $topleft;
	-moz-border-radius-topright:        $topright;
	-moz-border-radius-bottomright:     $bottomright;
	-moz-border-radius-bottomleft:      $bottomleft;
	-moz-border-radius-topleft:         $topleft;
	border-top-right-radius:            $topright;
	border-bottom-right-radius:         $bottomright;
	border-bottom-left-radius:          $bottomleft;
	border-top-left-radius:             $topleft;
	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

/*

	drop shadow settings

**************************************************/
@mixin box-shadow ($x, $y, $blur, $color) {
	box-shadow: $arguments;
	-moz-box-shadow: $arguments;
	-webkit-box-shadow: $arguments;
}


/*

	vertical align setting

**************************************************/
@mixin vertical-align() {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}


/*

	flexbox layout setting

**************************************************/
@mixin flexbox($justify,$align-items){
	display: flex;
	display: -webkit-flex;
	justify-content: $justify;
	align-items: $align-items;
}



/*

	hover transition

**************************************************/
@mixin transition($value: 0.5s) {
  -moz-transition: all $value ease;
  -webkit-transition: all $value ease;
  transition: all $value ease;
}


@mixin link_transition($element,$duration,$easing){
	-webkit-transition: all $duration $easing;
	-moz-transition: all $duration $easing;
	-webkit-transition: all $duration $easing;
	-o-transition: all $duration $easing;
	-ms-transition: all $duration $easing;
	transition: all $duration $easing;
}


@mixin hover($opacity: 70,$transition: 0.5s) {
  -moz-transition: all $transition ease;
  -webkit-transition: all $transition ease;
  transition: all $transition ease;
	&:hover {
	  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=$opacity)";
	  filter: alpha(opacity=$opacity);
	  -moz-opacity: ($opacity / 100);
	  -webkit-opacity: ($opacity / 100);
	  opacity: ($opacity / 100);
	}
}
